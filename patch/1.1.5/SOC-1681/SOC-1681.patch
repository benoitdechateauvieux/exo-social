Index: component/service/src/main/java/org/exoplatform/social/service/rest/ActivitiesRestService.java
===================================================================
--- component/service/src/main/java/org/exoplatform/social/service/rest/ActivitiesRestService.java	(revision 69138)
+++ component/service/src/main/java/org/exoplatform/social/service/rest/ActivitiesRestService.java	(working copy)
@@ -375,7 +375,7 @@
 
   private String getRemoteId(UriInfo uriInfo, String portalName) throws Exception {
     String viewerId = Util.getViewerId(uriInfo);
-    Identity identity = getIdentityManager(portalName).getIdentity(viewerId);
+    Identity identity = getIdentityManager(portalName).getOrCreateIdentity(OrganizationIdentityProvider.NAME, viewerId, false);
     return identity.getRemoteId();
   }
 
Index: component/service/src/main/java/org/exoplatform/social/service/rest/IdentityRestService.java
===================================================================
--- component/service/src/main/java/org/exoplatform/social/service/rest/IdentityRestService.java	(revision 69138)
+++ component/service/src/main/java/org/exoplatform/social/service/rest/IdentityRestService.java	(working copy)
@@ -30,6 +30,7 @@
 import org.exoplatform.container.PortalContainer;
 import org.exoplatform.services.rest.resource.ResourceContainer;
 import org.exoplatform.social.core.identity.model.Identity;
+import org.exoplatform.social.core.identity.provider.OrganizationIdentityProvider;
 import org.exoplatform.social.core.manager.IdentityManager;
 
 /**
@@ -63,7 +64,8 @@
       String id = null;
       String viewerId = Util.getViewerId(uriInfo);
       if (viewerId != null) {
-        Identity identity = getIdentityManager(portalName).getIdentity(viewerId);
+        Identity identity = getIdentityManager(portalName)
+          .getOrCreateIdentity(OrganizationIdentityProvider.NAME, viewerId, false);
         if (identity == null) {
           throw new WebApplicationException(Response.Status.NOT_FOUND);
         }
Index: component/service/src/main/java/org/exoplatform/social/service/rest/SpacesRestService.java
===================================================================
--- component/service/src/main/java/org/exoplatform/social/service/rest/SpacesRestService.java	(revision 69138)
+++ component/service/src/main/java/org/exoplatform/social/service/rest/SpacesRestService.java	(working copy)
@@ -35,6 +35,7 @@
 import org.exoplatform.services.rest.resource.ResourceContainer;
 import org.exoplatform.services.security.ConversationState;
 import org.exoplatform.social.core.identity.model.Identity;
+import org.exoplatform.social.core.identity.provider.OrganizationIdentityProvider;
 import org.exoplatform.social.core.manager.IdentityManager;
 import org.exoplatform.social.core.space.SpaceException;
 import org.exoplatform.social.core.space.model.Space;
@@ -289,7 +290,8 @@
   
   private String getRemoteId(UriInfo uriInfo) throws Exception {
     String viewerId = Util.getViewerId(uriInfo);
-    Identity identity = getIdentityManager().getIdentity(viewerId);
+    Identity identity = getIdentityManager()
+      .getOrCreateIdentity(OrganizationIdentityProvider.NAME, viewerId, false);
     return identity.getRemoteId();
   }
 
Index: component/service/src/main/java/org/exoplatform/social/service/rest/Util.java
===================================================================
--- component/service/src/main/java/org/exoplatform/social/service/rest/Util.java	(revision 69138)
+++ component/service/src/main/java/org/exoplatform/social/service/rest/Util.java	(working copy)
@@ -85,7 +85,6 @@
         break;
       }
     }
-    
     return viewerId;
   }
 
Index: component/opensocial/src/main/java/org/exoplatform/social/opensocial/service/ExoActivityService.java
===================================================================
--- component/opensocial/src/main/java/org/exoplatform/social/opensocial/service/ExoActivityService.java	(revision 69138)
+++ component/opensocial/src/main/java/org/exoplatform/social/opensocial/service/ExoActivityService.java	(working copy)
@@ -36,6 +36,7 @@
 import org.apache.shindig.social.opensocial.spi.UserId;
 import org.exoplatform.container.PortalContainer;
 import org.exoplatform.social.core.identity.model.Identity;
+import org.exoplatform.social.core.identity.provider.OrganizationIdentityProvider;
 import org.exoplatform.social.core.manager.ActivityManager;
 import org.exoplatform.social.core.manager.IdentityManager;
 
@@ -194,7 +195,7 @@
       IdentityManager identityManager = (IdentityManager) pc.getComponentInstanceOfType(IdentityManager.class);
 
       String user = userId.getUserId(token); // can be organization:name or organization:UUID
-      Identity userIdentity = identityManager.getIdentity(user);
+      Identity userIdentity = identityManager.getOrCreateIdentity(OrganizationIdentityProvider.NAME, user, false);
 
       // identity for the stream to post on
       Identity targetStream = userIdentity;
Index: component/opensocial/src/main/java/org/exoplatform/social/opensocial/service/ExoService.java
===================================================================
--- component/opensocial/src/main/java/org/exoplatform/social/opensocial/service/ExoService.java	(revision 69138)
+++ component/opensocial/src/main/java/org/exoplatform/social/opensocial/service/ExoService.java	(working copy)
@@ -34,6 +34,7 @@
 import org.exoplatform.social.common.jcr.QuerySpec;
 import org.exoplatform.social.common.jcr.QuerySpec.Operation;
 import org.exoplatform.social.core.identity.model.Identity;
+import org.exoplatform.social.core.identity.provider.OrganizationIdentityProvider;
 import org.exoplatform.social.core.manager.IdentityManager;
 import org.exoplatform.social.core.manager.RelationshipManager;
 import org.exoplatform.social.core.relationship.model.Relationship;
@@ -140,8 +141,13 @@
       PortalContainer pc = (PortalContainer) getPortalContainer(st);
       IdentityManager im = (IdentityManager) pc.getComponentInstanceOfType(IdentityManager.class);
 
-      Identity identity = im.getIdentity(id, loadProfile);
+      Identity identity = im.getOrCreateIdentity(OrganizationIdentityProvider.NAME, id, loadProfile);
+      
+      if (identity == null) {
+        identity = im.getIdentity(id, loadProfile);
+      }
 
+
       if(identity == null) throw new Exception("\n\n\n can't find identity \n\n\n");
 
       return identity;
Index: component/opensocial/src/main/java/org/exoplatform/social/opensocial/auth/ExoSocialSecurityTokenGenerator.java
===================================================================
--- component/opensocial/src/main/java/org/exoplatform/social/opensocial/auth/ExoSocialSecurityTokenGenerator.java	(revision 69138)
+++ component/opensocial/src/main/java/org/exoplatform/social/opensocial/auth/ExoSocialSecurityTokenGenerator.java	(working copy)
@@ -30,9 +30,6 @@
 import org.exoplatform.portal.webui.util.Util;
 import org.exoplatform.services.log.ExoLogger;
 import org.exoplatform.services.log.Log;
-import org.exoplatform.social.core.identity.model.Identity;
-import org.exoplatform.social.core.identity.provider.OrganizationIdentityProvider;
-import org.exoplatform.social.core.manager.IdentityManager;
 import org.exoplatform.web.application.RequestContext;
 
 public class ExoSocialSecurityTokenGenerator implements SecurityTokenGenerator {
@@ -76,40 +73,11 @@
 
   public String createToken(String gadgetURL, Long moduleId) {
     RequestContext context = RequestContext.getCurrentInstance();
-    String rUserId = getIdentityId(context.getRemoteUser());
-
-
-    //PortalRequestContext request = Util.getPortalRequestContext() ;
-    //String uri = request.getNodePath();
-
-
-    //String[] els = uri.split("/");
+    String rUserId = context.getRemoteUser();
     String ownerId = rUserId;
-//    if (els.length >= 3 && els[1].equals("people")) {
-//      ownerId = getIdentityId(els[2]);
-//    }
-    /*else if(els.length == 2 && els[1].equals("mydashboard")) {
-      owner = rUser;
-    }*/
-
     return createToken(gadgetURL, ownerId, rUserId, moduleId, "default");
   }
 
-  protected String getIdentityId(String remoteId){
-    PortalContainer pc = PortalContainer.getInstance();
-    IdentityManager im = (IdentityManager) pc.getComponentInstanceOfType(IdentityManager.class);
-
-    Identity id = null;
-    try {
-      id = im.getOrCreateIdentity(OrganizationIdentityProvider.NAME, remoteId);
-    } catch (Exception e) {
-      e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
-    }
-    if(id != null)
-      return id.getId();
-    return null;
-  }
-
   private BlobCrypter getBlobCrypter(String fileName) throws IOException {
     BasicBlobCrypter c = new BasicBlobCrypter(new File(fileName));
     c.timeSource = timeSource;
